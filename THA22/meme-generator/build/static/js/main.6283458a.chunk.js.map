{"version":3,"sources":["components/templates.jsx","components/meme.jsx","App.jsx","index.js"],"names":["Templates","templates","setMeme","className","map","template","onClick","style","backgroundImage","url","id","Meme","meme","useState","template_id","username","password","boxes","form","setForm","src","alt","Array","box_count","_","index","type","placeholder","onChange","e","newBoxes","text","target","value","box","console","log","fetch","then","res","json","data","App","setTemplates","useEffect","memes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAgBeA,EAhBG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAYC,EAAY,EAAZA,QAC5B,OACI,qBAAKC,UAAU,YAAf,SACCF,EAAUG,KAAI,SAACC,GAAD,OACX,qBAAuBF,UAAU,WAAWG,QAAS,WACjDJ,EAAQG,IADZ,SAGE,qBAAKE,MAAO,CAACC,gBAAgB,OAAD,OAASH,EAASI,IAAlB,MAC5BN,UAAU,WAJFE,EAASK,U,cCgDhBC,EAjDF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMV,EAAY,EAAZA,QACjB,EAAwBW,mBAAS,CAC7BC,YAAaF,EAAKF,GAClBK,SAAS,UACTC,SAAS,WACTC,MAAO,KAJX,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OACA,sBAAKhB,UAAU,OAAf,UACI,qBAAKiB,IAAKR,EAAKH,IAAKY,IAAI,KAE5B,8BAEO,YAAIC,MAAMV,EAAKW,YAAYnB,KAAI,SAACoB,EAAGC,GAAJ,OAC9B,uBAEAC,KAAK,OACLC,YAAW,uBAAkBF,EAAQ,GACrCG,SAAU,SAACC,GACP,IAAMC,EAAWZ,EAAKD,MACtBa,EAASL,GAAS,CAAEM,KAAMF,EAAEG,OAAOC,OACnCd,EAAQ,2BAAID,GAAL,IAAWD,MAAOa,OANxBL,QAYb,gCACI,wBAAQnB,QAjCK,WACjB,IAAIG,EAAG,4DAAwDS,EAAKJ,YAA7D,qBAAqFI,EAAKH,SAA1F,qBAA+GG,EAAKF,UAC3HE,EAAKD,MAAMb,KAAI,SAAC8B,EAAIT,GACpBhB,GAAG,iBAAcgB,EAAd,mBAA8BS,EAAIH,SAErCI,QAAQC,IAAI3B,GACX4B,MAAM5B,GACL6B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACNvC,EAAQ,2BAAIU,GAAL,IAAWH,IAAKgC,EAAKA,KAAKhC,WAwB/B,2BACA,wBAAQH,QAAS,WACbJ,EAAQ,OADZ,oCClBOwC,MAvBf,WACE,MAAkC7B,mBAAS,IAA3C,mBAAOZ,EAAP,KAAkB0C,EAAlB,KACA,EAAwB9B,mBAAS,MAAjC,mBAAOD,EAAP,KAAaV,EAAb,KAQA,OAPA0C,qBAAU,WACRP,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJE,EAAaF,EAAKA,KAAKI,YAEzB,IAEA,sBAAK1C,UAAU,MAAf,UACE,gDACU,OAATS,EAAgB,cAAC,EAAD,CAAUX,UAAWA,EAAWC,QAAUA,IACxD,cAAC,EAAD,CAAMU,KAAMA,EAAMV,QAAUA,QCZrC4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6283458a.chunk.js","sourcesContent":["const Templates = ({templates , setMeme}) =>{\n    return(\n        <div className=\"templates\">\n        {templates.map((template) =>(\n            <div key={template.id} className=\"template\" onClick={()=>{\n                setMeme(template)\n            }}>\n              <div style={{backgroundImage: `url(${template.url})`}} \n              className=\"image\">\n\n              </div>\n              </div>\n        ))}\n        </div> \n    );\n};\nexport default Templates;","import { useState } from \"react\";\n\n\nconst Meme = ({meme, setMeme}) =>{\n    const [form, setForm] = useState({\n        template_id: meme.id,\n        username:\"Anu1233\",\n        password:\"Anu12345\",\n        boxes: [],\n\n});\nconst generateMeme = () => {\n    let url = `https://api.imgflip.com/caption_image?template_id=${form.template_id}&username=${form.username}&password=${form.password}`;\n    form.boxes.map((box,index) => { \n    url += `&boxes[${index}][text]=${box.text}`;\n    });\n    console.log(url);\n     fetch(url)\n     .then((res) => res.json())\n     .then((data)=>{\n      setMeme({...meme, url: data.data.url });\n    });\n};\n    return (\n    <div className=\"meme\">\n        <img src={meme.url} alt=\"\" />\n    \n    <div>\n       {\n           [...Array(meme.box_count)].map((_, index) =>(\n            <input\n            key={index} \n            type=\"text\"\n            placeholder={`Meme Caption ${index + 1}`}\n            onChange={(e) => {\n                const newBoxes = form.boxes;\n                newBoxes[index] = { text: e.target.value};\n                setForm({...form, boxes: newBoxes});\n               \n            }}\n            />\n           ))}\n    </div>\n    <div>\n        <button onClick={generateMeme}>Generate Meme</button>\n        <button onClick={()=> {\n            setMeme(null);\n        }}>Choose Template</button>\n    </div>\n    </div>\n    );\n};\nexport default Meme;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Template from  \"./components/templates\"\nimport Meme from  \"./components/meme\"\nfunction App() {\n  const [templates, setTemplates] = useState([]);\n  const [meme, setMeme] = useState(null);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n    .then(res => res.json())\n    .then(data => {\n      setTemplates(data.data.memes)\n    });\n  },[]);\n  return (\n    <div className=\"App\">\n      <h1>Meme Generator</h1>\n      {meme === null ? <Template templates={templates} setMeme ={setMeme}/>\n       : <Meme meme={meme} setMeme ={setMeme}/>}\n      \n        </div>\n      \n     \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}